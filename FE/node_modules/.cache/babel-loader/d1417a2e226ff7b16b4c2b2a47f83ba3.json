{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumuth Gajakum\\\\Documents\\\\GitHub\\\\chatgpt-retrieval\\\\FE\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, IconButton, Box } from '@mui/material';\nimport Chat from './components/Chat';\nimport backgroundImage from './bg.jpg'; // Ensure the path is correct\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const toggleChat = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        backgroundColor: '#3f51b5',\n        // primary.main\n        color: 'white',\n        zIndex: 11 // Ensure button is above other elements\n      },\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        height: '100vh',\n        // Full viewport height\n        width: '100vw',\n        // Full viewport width\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: 10 // Ensure it appears above other elements\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          // Semi-transparent background\n          borderRadius: '10px',\n          width: '100%',\n          maxWidth: '600px',\n          // Set max width for the chat container\n          height: '100%',\n          maxHeight: '90vh',\n          // Set max height for the chat container\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '20px',\n          boxSizing: 'border-box',\n          overflowY: 'auto',\n          // Allow scrolling for the chat content\n          position: 'relative' // Ensure it doesn't interfere with fixed position elements\n        },\n        children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1RwI3Rpum6EBbUdSXPo/Ywgstjs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","IconButton","Box","Chat","backgroundImage","ChatIcon","jsxDEV","_jsxDEV","App","_s","isChatOpen","setIsChatOpen","toggleChat","children","style","position","bottom","right","backgroundColor","color","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","backgroundSize","backgroundPosition","height","width","display","justifyContent","alignItems","top","left","borderRadius","maxWidth","maxHeight","flexDirection","padding","boxSizing","overflowY","_c","$RefreshReg$"],"sources":["C:/Users/Bumuth Gajakum/Documents/GitHub/chatgpt-retrieval/FE/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, IconButton, Box } from '@mui/material';\r\nimport Chat from './components/Chat';\r\nimport backgroundImage from './bg.jpg'; // Ensure the path is correct\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\nconst App = () => {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen(!isChatOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        style={{\r\n          position: 'fixed',\r\n          bottom: '20px',\r\n          right: '20px',\r\n          backgroundColor: '#3f51b5', // primary.main\r\n          color: 'white',\r\n          zIndex: 11, // Ensure button is above other elements\r\n        }}\r\n        onClick={toggleChat}\r\n      >\r\n        <ChatIcon />\r\n      </IconButton>\r\n\r\n      {isChatOpen && (\r\n        <Container\r\n          style={{\r\n            backgroundImage: `url(${backgroundImage})`,\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            height: '100vh', // Full viewport height\r\n            width: '100vw', // Full viewport width\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 10, // Ensure it appears above other elements\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              backgroundColor: 'rgba(255, 255, 255, 0.8)', // Semi-transparent background\r\n              borderRadius: '10px',\r\n              width: '100%',\r\n              maxWidth: '600px', // Set max width for the chat container\r\n              height: '100%',\r\n              maxHeight: '90vh', // Set max height for the chat container\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              padding: '20px',\r\n              boxSizing: 'border-box',\r\n              overflowY: 'auto', // Allow scrolling for the chat content\r\n              position: 'relative', // Ensure it doesn't interfere with fixed position elements\r\n            }}\r\n          >\r\n            <Chat />\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,eAAe,MAAM,UAAU,CAAC,CAAC;AACxC,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA,CAACN,UAAU;MACTa,KAAK,EAAE;QACLC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE,SAAS;QAAE;QAC5BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,EAAE,CAAE;MACd,CAAE;MACFC,OAAO,EAAET,UAAW;MAAAC,QAAA,eAEpBN,OAAA,CAACF,QAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAEZf,UAAU,iBACTH,OAAA,CAACP,SAAS;MACRc,KAAK,EAAE;QACLV,eAAe,EAAE,OAAOA,eAAe,GAAG;QAC1CsB,cAAc,EAAE,OAAO;QACvBC,kBAAkB,EAAE,QAAQ;QAC5BC,MAAM,EAAE,OAAO;QAAE;QACjBC,KAAK,EAAE,OAAO;QAAE;QAChBC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBjB,QAAQ,EAAE,OAAO;QACjBkB,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPd,MAAM,EAAE,EAAE,CAAE;MACd,CAAE;MAAAP,QAAA,eAEFN,OAAA,CAACL,GAAG;QACFY,KAAK,EAAE;UACLI,eAAe,EAAE,0BAA0B;UAAE;UAC7CiB,YAAY,EAAE,MAAM;UACpBN,KAAK,EAAE,MAAM;UACbO,QAAQ,EAAE,OAAO;UAAE;UACnBR,MAAM,EAAE,MAAM;UACdS,SAAS,EAAE,MAAM;UAAE;UACnBP,OAAO,EAAE,MAAM;UACfQ,aAAa,EAAE,QAAQ;UACvBC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAE,YAAY;UACvBC,SAAS,EAAE,MAAM;UAAE;UACnB1B,QAAQ,EAAE,UAAU,CAAE;QACxB,CAAE;QAAAF,QAAA,eAEFN,OAAA,CAACJ,IAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CACZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9DID,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAgET,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}